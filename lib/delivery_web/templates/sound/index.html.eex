  
<h3>Audio clips</h3>

<div class="ui divider"></div>

    <div class="ui form">
      <div class="fields">
        <div class="inline field">
          <label>Create new clip:</label>
          <input id="name" type="text" placeholder="Name of the clip">
        </div>
        <div class="ui icon buttons" >
          <button class="ui button" id="record">
            <i class="microphone icon"></i>
          </button>
          <button class="ui button" id="stop" disabled>
            <i class="stop icon"></i>
          </button>
          <button class="ui button" id="save" disabled>
            <i class="save icon"></i>
          </button>
        </div>
      </div>
    </div>
    
    <audio style="display: none;" id="audio" controls></audio>

  <table class="ui celled compact table">
    <thead>
      <tr>
        <th>Name</th>
      </tr>
    </thead>
    <tbody>
    <%= for s <- @sounds do %>
      <tr>
        <td><%= link s.name, to: Routes.sound_path(@conn, :loaded, s.id) %></td>
      </tr>
    <% end %>
    </tbody>
  </table>


  <script>

    var recordButton, stopButton, recorder;

    var data = null;
    var steam = null;

    window.onload = function () {
      recordButton = document.getElementById('record');
      stopButton = document.getElementById('stop');
      saveButton = document.getElementById('save');

      // get audio stream from user's mic
      navigator.mediaDevices.getUserMedia({
        audio: true
      })
      .then(function (s) {

        recordButton.disabled = false;
        recordButton.addEventListener('click', startRecording);
        stopButton.addEventListener('click', stopRecording);
        saveButton.addEventListener('click', save);
        stream = s;
        init();
      });
    };

    function init() {
       recorder = new MediaRecorder(stream);

        // listen to dataavailable, which gets triggered whenever we have
        // an audio blob available
        recorder.addEventListener('dataavailable', onRecordingReady);
    }

    function save(){

      recordButton.disabled = true;
      stopButton.disabled = false;
      
        // create a blob here for testing
        
        //var blob = yourAudioBlobCapturedFromWebAudioAPI;// for example   
        var reader = new FileReader();
        // this function is triggered once a call to readAsDataURL returns
        reader.onload = function(event){
            var fd = new FormData();
            fd.append('name', document.getElementById('name').value);
            fd.append('content', event.target.result);
            $.ajax({
                type: 'POST',
                url: '/api/sound',
                data: fd,
                processData: false,
                contentType: false
            }).done(function(data) {
                // print the output from the upload.php script
                window.location.href = "/sound";
            });
        };      
        // trigger the read from the reader...
        reader.readAsDataURL(data);

    }

    function startRecording() {

      init();

      recordButton.disabled = true;
      recordButton.style = "color: red;";
      stopButton.disabled = false;
      saveButton.disabled = true;

      recorder.start();
    }

    function stopRecording() {
      recordButton.disabled = false;
      recordButton.style = "";
      stopButton.disabled = true;
      saveButton.disabled = false;

      // Stopping the recorder will eventually trigger the `dataavailable` event and we can complete the recording process
      recorder.stop();
      
    }

    function onRecordingReady(e) {
      var audio = document.getElementById('audio');
      // e.data contains a blob representing the recording
      audio.src = URL.createObjectURL(e.data);

      data = e.data; 
      audio.play();
    }

    <%= if @loaded do %>
      document.getElementById('audio').src = "<%= @clip.content %>";
      document.getElementById('audio').play();
      
    <% end %>
  </script>